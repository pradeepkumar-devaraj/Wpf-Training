<Window x:Class="WpfTreeViewDataBinding.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfTreeViewDataBinding"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <local:TypeToImageSourceConverter x:Key="ImageSourceConverter"></local:TypeToImageSourceConverter>
    </Window.Resources>
    <Grid>
        <!--First set the Item source of tree view to a collection object in data context-->
        <TreeView ItemsSource="{Binding Data}" HorizontalAlignment="Left" Height="285" Margin="118,47,0,0" VerticalAlignment="Top" Width="196">
            <TreeView.DataContext>
                <local:TreeViewData></local:TreeViewData>
            </TreeView.DataContext>
            <!-- Then define the Item template for each parent item in the collection -->
            <TreeView.ItemTemplate>
                <!--As parent item can have children collection, use hierarchical data template. Define the template for the parent item. 
                    Assign the Children collection to item source of Hierarchical data template -->
                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{Binding Converter={StaticResource ImageSourceConverter}}" Height="12" Width="10" ></Image>
                        <TextBlock Text="{Binding Name}"/>
                    </StackPanel>
                    
                    <!-- Define the Item template for each child item in the children collection -->
                    <HierarchicalDataTemplate.ItemTemplate>
                        <!-- If the child also can have Children collection, use hierarchical data template. Define the template for the child item. -->
                        <!-- If in case where 2nd level is always leaf nodes, then instead of "HierarchicalDataTemplate" we can use simple "DataTemplate"-->
                            <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{Binding Converter={StaticResource ImageSourceConverter}}" Height="12" Width="10" ></Image>
                                <!-- As leaf nodes also implement ITree, the same ItemTemplate would work for leaf nodes also-->
                                <TextBlock Text="{Binding Name}"/>
                            </StackPanel>
                        </HierarchicalDataTemplate>
                    </HierarchicalDataTemplate.ItemTemplate>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>

    </Grid>
</Window>
